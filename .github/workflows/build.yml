name: Build/Test/Verify/Release
on: [push]
env:
  ROM_VERSION: v0.4.0
  KERNEL_VERSION: v0.7.0
  ROOTFS_VERSION: v0.6.0
  TEST_VERSION: v0.8.0
  GROUND_TRUTH_VERSION: v0.8.0-0004
  BUILD_CACHE_VERSION: v0.6.0-0001
jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}

      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libreadline-dev libboost-container-dev libboost-program-options-dev libboost-serialization-dev protobuf-compiler protobuf-compiler-grpc libprotobuf-dev libgrpc++-dev patchelf automake

      - name: Download cache of third-party build
        run: aws s3 sync s3://cartesi-ci/${GITHUB_REPOSITORY}/cache/build-${BUILD_CACHE_VERSION} ./build && test -f ./build/`uname`_`uname -m`/bin/luapp5.3
        id: download_cache
        continue-on-error: true
        env:
          AWS_REGION: 'us-east-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build third-party dependencies
        id: build_dep
        if: ${{ steps.download_cache.outcome == 'failure' }}
        run: make -j$(nproc) dep

      - name: Cache third-party build
        if: ${{ steps.build_dep.outcome == 'success' }}
        run: aws s3 sync ./build s3://cartesi-ci/${GITHUB_REPOSITORY}/cache/build-${BUILD_CACHE_VERSION}
        env:
          AWS_REGION: 'us-east-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build
        run: make -j$(nproc)

      - name: Install [/opt/cartesi]
        run: make install

      - name: Fix install permissions [/opt/cartesi]
        run: find /opt/cartesi -type d -exec chmod 755 {} +

      - name: Upload emulator
        uses: actions/upload-artifact@master
        with:
          name: emulator
          path: /opt/cartesi

  test:
    name: Test
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Download emulator
        uses: actions/download-artifact@master
        with:
          name: emulator
          path: /opt/cartesi

      - name: Create images folder
        run: mkdir -m 755 -p /opt/cartesi/share/images

      - name: Fix install directories and permissions [/opt/cartesi]
        run: |
          find /opt/cartesi -type d -exec chmod 755 {} +
          find /opt/cartesi -type f -exec chmod 644 {} +
          find /opt/cartesi/bin -type f \! -iname "*.lua" -exec chmod 755 {} +
          find /opt/cartesi/lib -type f -exec chmod 755 {} +

      - name: Install Ubuntu dependencies
        run: sudo apt-get update -y && sudo apt-get install -y libboost-program-options1.71.0 libboost-serialization1.71.0 libprotobuf17 libprotobuf-lite17 libgrpc++1 netcat llvm

      - name: Set current git organization env var
        id: git_org
        run: echo "::set-output name=current_organization::$(echo ${GITHUB_REPOSITORY} | cut -d '/' -f 1)"

      - name: Download [rootfs.ext2]
        uses: Legion2/download-release-action@v2.1.0
        with:
          repository: ${{ steps.git_org.outputs.current_organization }}/image-rootfs
          tag: ${{ env.ROOTFS_VERSION }}
          file: rootfs.ext2
          token: ${{ secrets.CI_TOKEN }}

      - name: Download [kernel.bin]
        uses: Legion2/download-release-action@v2.1.0
        with:
          repository: ${{ steps.git_org.outputs.current_organization }}/image-kernel
          tag: ${{ env.KERNEL_VERSION }}
          file: linux-5.5.19-ctsi-2.bin
          token: ${{ secrets.CI_TOKEN }}

      - name: Download [rom.bin]
        uses: Legion2/download-release-action@v2.1.0
        with:
          repository: ${{ steps.git_org.outputs.current_organization }}/machine-emulator-rom
          tag: ${{ env.ROM_VERSION }}
          file: rom.bin
          token: ${{ secrets.CI_TOKEN }}

      - name: Move images to cartesi images folder
        run: |
          mv rom.bin linux-5.5.19-ctsi-2.bin rootfs.ext2 /opt/cartesi/share/images/
          cd /opt/cartesi/share/images/ && ln -s linux-5.5.19-ctsi-2.bin linux.bin

      - name: Download test suite
        uses: Legion2/download-release-action@v2.1.0
        with:
          repository: ${{ steps.git_org.outputs.current_organization }}/machine-tests
          tag: ${{ env.TEST_VERSION }}
          file: machine-tests-${{ env.TEST_VERSION }}.tar.gz
          token: ${{ secrets.CI_TOKEN }}

      - name: Untar test suite
        run: mkdir -p /opt/cartesi/tests && tar -xzf machine-tests-${TEST_VERSION}.tar.gz -C /opt/cartesi/tests

      - name: Checkout emulator source code
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN }}

      - name: Calculate coverage
        run: |
          export CARTESI_IMAGES_PATH=/opt/cartesi/share/images
          export CARTESI_TESTS_PATH=/opt/cartesi/tests
          cd src && make coverage
          bash <(curl -s https://codecov.io/bash) -f coverage.txt || echo "Codecov did not collect coverage reports"
